# Generated by Django 3.2.2 on 2021-07-22 14:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(upload_to='employee/')),
                ('cv', models.FileField(upload_to='cvs')),
                ('github', models.URLField(verbose_name='github page')),
                ('status', models.CharField(default='pending', max_length=30)),
                ('created', models.DateField(auto_now_add=True, verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, upload_to='employee/')),
                ('cv', models.FileField(blank=True, upload_to='cvs')),
                ('github', models.URLField(blank=True, verbose_name='github page')),
                ('created', models.DateField(auto_now_add=True, verbose_name='date created')),
                ('departments', models.ManyToManyField(related_name='employees', to='evaluator.Department')),
                ('designations', models.ManyToManyField(related_name='employees', to='evaluator.Designation')),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(upload_to='evaluators/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.CharField(max_length=300)),
                ('b', models.CharField(max_length=300)),
                ('c', models.CharField(max_length=300)),
                ('d', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('answer', models.CharField(max_length=1)),
                ('options', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='evaluator.option')),
            ],
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('efficiency', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('timeliness', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('quality', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('accuracy', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('performance_average', models.PositiveIntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct', models.PositiveIntegerField(default=0)),
                ('incorrect', models.PositiveIntegerField(default=0)),
                ('score', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=500)),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('in progress', 'in progress'), ('complete', 'complete')], default='pending', max_length=20)),
                ('due_date', models.DateField(verbose_name='Date Due')),
                ('created', models.DateField(auto_now_add=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluator.employee', verbose_name='assigned to')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluator.evaluator')),
            ],
            options={
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='RegularUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(upload_to='reg_users/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswered',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, max_length=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluator.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluator.applicant')),
            ],
            options={
                'verbose_name': 'Question Answered',
                'verbose_name_plural': 'Questions Answered',
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_added', models.DateField(auto_now_add=True, verbose_name='date added')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progresses', to='evaluator.task')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_evaluated', models.DateField(auto_now_add=True, verbose_name='date evaluated')),
                ('remarks', models.TextField(max_length=300)),
                ('ratings', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='evaluator.ratings')),
                ('task', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='evaluator.task')),
            ],
            options={
                'ordering': ['-date_evaluated'],
            },
        ),
        migrations.AddField(
            model_name='applicant',
            name='department',
            field=models.ManyToManyField(related_name='applicants', to='evaluator.Department'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='designation',
            field=models.ManyToManyField(related_name='applicants', to='evaluator.Designation'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='test',
            field=models.ManyToManyField(through='evaluator.QuestionAnswered', to='evaluator.Question'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='test_result',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='evaluator.testresult', verbose_name='test result'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
